version: '3.9'
services:
  web:
    build: .
    command: >
      sh -c "
              python manage.py migrate cinema_app --noinput &&
              python manage.py migrate --noinput &&
              python manage.py runserver 0.0.0.0:8000 "
    working_dir: /app
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=cinema.settings_prod
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery:
    build: .
    command: >
      sh -c "./wait-for-it.py db:5432 redis:6379 -- \
               celery -A cinema worker --loglevel=info 2>&1 | tee -a logs/celery_tasks.log"
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=cinema.settings_prod
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  beat:
    build: .
    command: >
      sh -c "./wait-for-it.py db:5432 redis:6379 -- \
             celery -A cinema beat --loglevel=info 2>&1 | tee -a logs/celery_tasks.log"
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=cinema.settings_prod
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  redis:
    image: redis:7
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  bot:
    build: .
    command: >
      sh -c "./wait-for-it.py db:5432 redis:6379 web:8000 -- \
             python -m cinema_tg_bot.bot"
    working_dir: /app
    volumes:
      - .:/app
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=cinema.settings_prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe', timeout=5)"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
